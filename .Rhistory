corr <- function(directory, threshold = 0) {
files <- list.files(directory)
filepaths <- paste(directory, "/", files, sep="")
## Creates the file paths for loading in the data
table1 <- complete(directory, id)
## runs compete to give a full list of id's and observations
table2 <- table1[table1[nobs]>threshold]$id
## limits this to those over the threshold
corrV <- numeric()
## creates an empty numeric vector called corr
for (i in table2) {
table3 <- read.csv(filepaths[i])
table4 = table3[complete.cases(table3), ]
corrV = c(corrV, cor(table4$sulfate, table4$nitrate))
}
return(corrV)
}
cr <- corr("specdata", 150)
head(cr)
corr <- function(directory, threshold = 0) {
files <- list.files(directory)
filepaths <- paste(directory, "/", files, sep="")
## Creates the file paths for loading in the data
table1 <- complete(directory, id)
## runs compete to give a full list of id's and observations
table2 <- table1[table1[nobs]>threshold]
## limits this to those over the threshold
corrV <- numeric()
## creates an empty numeric vector called corr
for (i in table2) {
table3 <- read.csv(filepaths[i])
table4 = table3[complete.cases(table3), ]
corrV = c(corrV, cor(table4$sulfate, table4$nitrate))
}
return(corrV)
}
cr <- corr("specdata", 150)
head(cr)
corr <- function(directory, threshold = 0) {
files <- list.files(directory)
filepaths <- paste(directory, "/", files, sep="")
## Creates the file paths for loading in the data
table1 <- complete(directory, )
## runs compete to give a full list of id's and observations
table2 <- table1[table1[nobs]>threshold]
## limits this to those over the threshold
corrV <- numeric()
## creates an empty numeric vector called corr
for (i in table2) {
table3 <- read.csv(filepaths[i])
table4 = table3[complete.cases(table3), ]
corrV = c(corrV, cor(table4$sulfate, table4$nitrate))
}
return(corrV)
}
cr <- corr("specdata", 150)
head(cr)
complete(specdata,)
complete("specdata",)
table1 <- complete(directory, )
table1 <- complete("specdata", )
table1
table2 <- table1[table1[nobs]>150]
table2 <- table1[table1$nobs > 150]
table2 <- table1[nobs > 150]
table2 <- table1[table1["nobs"]>150]
table2
table2 <- table1[table1["nobs"]>150]$id
table2 <- table1[table1["nobs"]>150,]$id
table2
table2 <- table1[,table1["nobs"]>150]$id
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
corr <- function(directory, threshold = 0) {
files <- list.files(directory)
filepaths <- paste(directory, "/", files, sep="")
## Creates the file paths for loading in the data
table1 <- complete(directory, )
## runs compete to give a full list of id's and observations
table2 <- table1[table1["nobs"]>threshold,]$id
## limits this to those over the threshold
corrV <- numeric()
## creates an empty numeric vector called corr
for (i in table2) {
table3 <- read.csv(filepaths[i])
table4 = table3[complete.cases(table3), ]
corrV = c(corrV, cor(table4$sulfate, table4$nitrate))
}
return(corrV)
}
cr <- corr("specdata", 150)
head(cr)
help($)
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
he
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
corr <- function(directory, threshold = 0) {
files <- list.files(directory)
filepaths <- paste(directory, "/", files, sep="")
## Creates the file paths for loading in the data
table1 <- complete(directory, )
## runs compete to give a full list of id's and observations
table2 <- table1[table1["nobs"]>threshold,]$id
## limits this to those over the threshold
corrV <- numeric()
## creates an empty numeric vector called corr
for (i in table2) {
table3 <- read.csv(filepaths[i])
table4 = table3[complete.cases(table3), ]
corrV = c(corrV, cor(table4$sulfate, table4$nitrate))
}
return(corrV)
}
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
help(complete.cases)
help(return)
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
he
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
corr <- function(directory, threshold = 0) {
files <- list.files(directory)
filepaths <- paste(directory, "/", files, sep="")
## Creates the file paths for loading in the data
table1 <- complete(directory, )
## runs compete to give a full list of id's and observations
table2 <- table1[table1["nobs"]>threshold,]$id
## limits this to those over the threshold
corrV <- numeric()
## creates an empty numeric vector called corr
for (i in table2) {
table3 <- read.csv(filepaths[i])
## reads in files to where they are in table 2
table4 = table3[complete.cases(table3), ]
## reads only complete cases in i.e. no NA's
corrV = c(corrV, cor(table4$sulfate, table4$nitrate))
## populates the corrV vector with the correlations of pollutants
## in each of the tables
}
## return(corrV)
}
cr <- corr("specdata", 150)
head(cr)
corr <- function(directory, threshold = 0) {
files <- list.files(directory)
filepaths <- paste(directory, "/", files, sep="")
## Creates the file paths for loading in the data
table1 <- complete(directory, )
## runs compete to give a full list of id's and observations
table2 <- table1[table1["nobs"]>threshold,]$id
## limits this to those over the threshold
corrV <- numeric()
## creates an empty numeric vector called corr
for (i in table2) {
table3 <- read.csv(filepaths[i])
## reads in files to where they are in table 2
table4 = table3[complete.cases(table3), ]
## reads only complete cases in i.e. no NA's
corrV = c(corrV, cor(table4$sulfate, table4$nitrate))
## populates the corrV vector with the correlations of pollutants
## in each of the tables
}
## return(corrV)
}
cr <- corr("specdata", 150)
head(cr)
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
complete <- function(directory, id = 1:332) {
files <- list.files(directory)
filepaths <- paste(directory, "/", files, sep="")
## Creates the file paths for loading in the data
nobs <- numeric()
## creates an empty numeric vector called nobs
for (i in id) {
nobs <- c(nobs, nrow(complete.cases(read.csv(filepaths[i]))))
}
##populates the nobs vector with the number of observations (nrow)
##from the files
## na.omit removes the NA line observations
tab <- data.frame(id, nobs)
tab
}
## Prints data
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
complete <- function(directory, id = 1:332) {
files <- list.files(directory)
filepaths <- paste(directory, "/", files, sep="")
## Creates the file paths for loading in the data
nobs <- numeric()
## creates an empty numeric vector called nobs
for (i in id) {
nobs <- c(nobs, nrow(na.omit(read.csv(filepaths[i]))))
}
##populates the nobs vector with the number of observations (nrow)
##from the files
## na.omit removes the NA line observations
tab <- data.frame(id, nobs)
tab
}
## Prints data
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
corr <- function(directory, threshold = 0) {
files <- list.files(directory)
filepaths <- paste(directory, "/", files, sep="")
## Creates the file paths for loading in the data
table1 <- complete(directory, )
## runs compete to give a full list of id's and observations
table2 <- table1[table1["nobs"]>threshold,]$id
## limits this to those over the threshold
## the $id ensures it returns the id values
corrV <- numeric()
## creates an empty numeric vector called corr
for (i in table2) {
table3 <- read.csv(filepaths[i])
## reads in files to where they are in table 2
table4 = table3[complete.cases(table3), ]
## reads only complete cases in i.e. no NA's
corrV = c(corrV, cor(table4$sulfate, table4$nitrate))
## populates the corrV vector with the correlations of pollutants
## in each of the tables
}
return(corrV)
## my code was not working a google search brought up this it fixed to code
}
## prints results
cr <- corr("specdata", 150)
head(cr)
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
corr <- function(directory, threshold = 0) {
files <- list.files(directory)
filepaths <- paste(directory, "/", files, sep="")
## Creates the file paths for loading in the data
table1 <- complete(directory, )
## runs compete to give a full list of id's and observations
table2 <- table1[table1["nobs"]>threshold,]$id
## limits this to those over the threshold
## the $id ensures it returns the id values
corrV <- numeric()
## creates an empty numeric vector called corr
for (i in table2) {
table3 <- read.csv(filepaths[i])
## reads in files to where they are in table 2
table4 = table3[na.omit(table3), ]
## reads only complete cases in i.e. no NA's
corrV = c(corrV, cor(table4$sulfate, table4$nitrate))
## populates the corrV vector with the correlations of pollutants
## in each of the tables
}
return(corrV)
## my code was not working a google search brought up this it fixed to code
}
## prints results
cr <- corr("specdata", 150)
head(cr)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit(1:10)
submit()
sumbit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
ls()
rm(list=ls())
ls()
library (datasets)
data(iris)
?iris
head(iris)
mean(iris[isris$Sepal.Length])
mean(iris[Sepal.Length])
mean(iris$Sepal.Length)
help(split)
s<-split(iris, iris$Species)
s
help(sapply)
sapply(s,mean(s$Sepal.Length))
lapply(s, function(x) colMeans("Sepal.Length"))
lapply(s, function(x) colMeans(x,"Sepal.Length"))
lapply(s, function(x) colMeans(x[,"Sepal.Length"]))
lapply(s, function(x) colMeans(x[,"Sepal.Lenght"]))
head(iris)
lapply(s, function(x) colMeans(x[,"Sepal.Length"]))
lapply(s, function(x) colMeans(x[,c("Sepal.Length", "Sepal.Width")]))
apply(iris[,1:4],mean)
apply(iris[,1:4],2,mean)
apply(iris[,1:4],1,mean)
apply(iris,2,mean)
apply(iris,1,mean)
apply(iris[,1:4],2,mean)
library(datasets)
data(mtcars)
?mtcars
tapply(mtcars$cyl, mtcars$mpg, mean)
help(tapply)
with(mtcars, tapply(mpg, cyl, mean))
sapply(mtcars, cyl, mean)
lapply(mtcars, mean)
?mtcars
with(mtcars, tapply(hp, cyl, mean))
w<-with(mtcars, tapply(hp, cyl, mean))
w
w$4 - w$8
> -1*diff(w)
# [1] 2 1
> abs(diff(w))
# [1] 2 1
> rev(diff(rev(w)))
# [1] 2 1
diff(w)
?diff
w[4]-w[8]
diff(w,2)
209.21429-82.63636
debug(ls)
ls()
library (datasets)
data(iris)
s<-split(iris, iris$Species)
#split the dataset by species
lapply(s, function(x) colMeans(x[,c("Sepal.Length", "Sepal.Width")]))
#applied column means to the data sets had to have more than one column to get it to work.
apply(iris[,1:4],2,mean)
#provides the mean of the columns
library(datasets)
data(mtcars)
debug()
browse()
exit()
close()
q
q()
library(datasets)
data(mtcars)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
C
rm(list=ls())
library(datasets)
data(mtcars)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
split(mtcars, mtcars$cyl)
mean(mtcars$mpg, mtcars$cyl)
apply(mtcars, 2, mean)
sapply(split(mtcars$hp, mtcars$cyl), mean)
s<-sapply(split(mtcars$hp, mtcars$cyl), mean)
diff(s,2)
rm(list=ls())
library(swirl)
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1,9,3.14)
?c
z
c(z,555,z)
z * 2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z * 2 + 1000
my_div
getwd()
ls()
x <- 9
ls()
dir()
?list.files
args(list.files())
args(list.files)
old.dir <- getwd()
dir.create(testdir)
dir.create("testdir")
setwd(testdir)
setwd("testdir")
file.create("mytest.R")
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path()
file.path("mytest3.R")
file.path("folder1","folder2")
?dir.create
dir.create(file.path("testdir2","testdir3", recursive = TRUE))
dir.create(file.path("testdir2","testdir3"), recursive = TRUE)
unlink("testdir2", recursive = TRUE)
setwed(old.dir)
setwd(old.dir)
unlink("testdir", recursive = TRUE)
1:20
pi:10
15:1
?":"
seq(1,20)
seq(0,10, by=0.5)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times =40)
rep(c(0,1,2), times=10)
rep(c(0,1,2),each=10)
swirl()
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My","name","is")
my_char
paste(my_char, collapse = " ")
c(my_char, "Tom")
my_name <- c(my_char, "Tom")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(c(1:3), c("X","Y","Z"))
paste(c(1:3), c("X","Y","Z"), sep ="")
paste(LETTERS, 1:$, sep = "-")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x*3
y<- rnorm(1000)
z <- rep(NA,1000)
my_data <- sample(c(y,z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
