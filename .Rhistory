install.packages(c("slidify","ggplot2","devtools"))
source("http://bioconductor.org/biocLite.R")
biocLite
biocLite()
install.packages("KernSmooth")
library(KernSmooth)
install.packages(c("boot", "devtools", "evaluate", "jsonlite", "manipulate", "Matrix", "plyr", "Rcpp", "RCurl", "roxygen2", "stringr"))
install.packages ("swirl")
read.csv "hw1_data.csv"
x<- 4L
class(x)
x<- c(4,"a", TRUE)
class(x)
x<-c(1,3,5)
y<-(3,2,10)
y<-c(3,2,10)
cbind(x,y)
x<-list(2,"a","b",TRUE)
x[[2]]
x,-1:4
x<-1:4
y<-2
x+y
x<-c(3,5,1,10,12,6)
x
x(x<6)<-0
x
x[x<6]<-0
x
read.csv hw1_data.csv
read.csv "hw1_data"
help (read.csv)
getwd()
getwd()
setwd(~/Documents/Toms/Coursera/datasciencecoursera)
setwd(\\Users\\Christopher\\Documents\\Toms\\Coursera\\datasciencecoursera)
setwd(Users\\Christopher\\Documents\\Toms\\Coursera\\datasciencecoursera)
setwd(//Users//Christopher//Documents//Toms//Coursera//datasciencecoursera)
setwd(Users//Christopher//Documents//Toms//Coursera//datasciencecoursera)
setwd("~/Documents/Toms/Coursera/datasciencecoursera")
getwd()
read.csv(hw1_data.csv)
read.csv("hw1_data.csv")
x<- read.csv("hw1_data.csv")
x
is.na(x["Ozone"])
y<-is.na(x["Ozone"])
y
table y
table(y)
summary (y)
summary (x["Ozone"])
x
z<-x[c("Ozone">31,"Temp">90)]
z
z<- x["Ozone">31,"Temp">90]
z
z<-x["Ozone>31"]
z<-x["Ozone">31]
z
z<-data.frame(x["Ozone">31])
z
z<- x [["Ozone">31]]
z
z <-x[which(x$Ozone > 31 & x$Temp > 90)]
z <-x[which(x$"Ozone" > 31 & x$"Temp" > 90)]
z <- subset(x, Ozone > 31, Temp >90)
z
z <- subset(x, Ozone > 31)
z
z2 <- subset(x, Temp > 90)
z2
z2 <- subset(z, Temp > 90)
z2
summary(z2[Solar.R])
summary(z2["Solar.R"])
z3 <- subset(x, Month == 6)
z3
summary(z3["Temp"])
z4 <- subset(x, Month == 5)
summary(z4["Ozone"])
x<- c("a","b","c","d")
for(i in 1:4) {print(x[i])}
for (i in seq_along(x)){print(x[i])}
for (letter in x){print[letter]}
for (letter in x){print(letter)}
x<-matrix(1:6,2,3)
for (i in seq_len(nrow(x))) {for(j in seq_len(ncol(x)))}{print(x[i,j])}
for (i in seq_len(nrow(x))) {for(j in seq_len(ncol(x)))}print(x[i,j])
for (i in seq_len(nrow(x))) {for(j in seq_len(ncol(x))) {print(x[i,j])}}
x
count <- 0
while (count < 10) {print(count) count <- count +1}
while (count < 10) {print(count) count <- count +1}
while (count < 10) {print(count) count <- count + 1}
while (count < 10) {print(count) count <- count + 1}
while (count < 10) {print(count) count = count + 1}
while (count < 10) {print(count) count = count + 1}
z<-5
z
while(z >= 3 && <=10) { print(z) coin <- rbinom(1,1,0.5) if (coin == 1){z<- z+1} else { z <- z-1}}
while(z >= 3 && z <=10) { print(z) coin <- rbinom(1,1,0.5) if (coin == 1){z<- z+1} else { z <- z-1}}
while(z >= 3 && z <=10) { print(z) coin <- rbinom(1,1,0.5) if (coin == 1){z<- z+1} else { z <- z-1}}
while(z >= 3 && z <=10) {
print(z)
coin <- rbinom(1,1,0.5)
if (coin == 1)
{z<- z+1
} else {
z <- z-1
}
}
add2 <- function(x,y) {
x+y
}
add2(3,5)
above <- function (x,n){
use <- x > n
x [use]
}
x <- 1:20
above (x,12)
above <- function (x,n = 10){
use <- x > n
x [use]
}
above (x)
columnmean <- function (x) {
nc <- ncol(x)
means <- numeric(nc)
for(i in 1:nc) {
means [i] <-mean(x[,i])
}
means
}
columnmean (airquality)
columnmean <- function (x, removeNA = TRUE) {
nc <- ncol(x)
means <- numeric(nc)
for(i in 1:nc) {
means [i] <-mean(x[,i], na.rm = removeNA)
}
means
}
columnmean (airquality)
columnmean (airquality, FALSE)
